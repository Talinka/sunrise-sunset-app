{"version":3,"sources":["assets/icons/sunrise.svg","assets/icons/sunset.svg","assets/countries.js","components/Search.js","components/AstronomicalInfo.js","engine/astronomicalInfoPicker.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","countries","id","lat","lng","name","Search","onSearch","useState","selectedCountries","setSelectedCountries","selectedDate","setSelectedDate","submitted","useRef","Form","noValidate","onSubmit","e","preventDefault","current","isSelectedValidDate","Date","parse","isSelectedValidCountry","length","country","date","Row","className","Group","as","Col","sm","xs","Label","Control","type","value","onChange","target","isInvalid","Feedback","data","selected","labelKey","option","options","geoData","Button","AstronomicalInfo","isLoading","sunsetTime","sunriseTime","Spinner","animation","Container","md","lg","src","sunrise","alt","sunset","getAstronomicalInfoUrl","a","formattedDate","getFormattedDateString","fetch","response","json","results","status","ok","Error","message","month","getMonth","padStart","day","getDate","getFullYear","Main","astronomicalInfo","setAstronomicalInfo","error","setError","setLoading","searchHandler","isValid","getAstromicalInfo","result","Alert","variant","Heading","App","role","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b3967ddf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunrise.90e2eb44.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunset.9e8ebd38.svg\";","// open google geo dataset\n\nconst countries = [\n  {\n    id:\"AD\",\n    lat:\"42.546245\",\n    lng:\"1.601554\",\n    name:\"Andorra\"\n  },\n  {\n    id:\"AE\",\n    lat:\"23.424076\",\n    lng:\"53.847818\",\n    name:\"\\\"United Arab Emirates\\\"\"\n  },\n  {\n    id:\"AF\",\n    lat:\"33.93911\",\n    lng:\"67.709953\",\n    name:\"Afghanistan\"\n  },\n  {\n    id:\"AG\",\n    lat:\"17.060816\",\n    lng:\"-61.796428\",\n    name:\"\\\"Antigua and Barbuda\\\"\"\n  },\n  {\n    id:\"AI\",\n    lat:\"18.220554\",\n    lng:\"-63.068615\",\n    name:\"Anguilla\"\n  },\n  {\n    id:\"AL\",\n    lat:\"41.153332\",\n    lng:\"20.168331\",\n    name:\"Albania\"\n  },\n  {\n    id:\"AM\",\n    lat:\"40.069099\",\n    lng:\"45.038189\",\n    name:\"Armenia\"\n  },\n  {\n    id:\"AN\",\n    lat:\"12.226079\",\n    lng:\"-69.060087\",\n    name:\"\\\"Netherlands Antilles\\\"\"\n  },\n  {\n    id:\"AO\",\n    lat:\"-11.202692\",\n    lng:\"17.873887\",\n    name:\"Angola\"\n  },\n  {\n    id:\"AQ\",\n    lat:\"-75.250973\",\n    lng:\"-0.071389\",\n    name:\"Antarctica\"\n  },\n  {\n    id:\"AR\",\n    lat:\"-38.416097\",\n    lng:\"-63.616672\",\n    name:\"Argentina\"\n  },\n  {\n    id:\"AS\",\n    lat:\"-14.270972\",\n    lng:\"-170.132217\",\n    name:\"\\\"American Samoa\\\"\"\n  },\n  {\n    id:\"AT\",\n    lat:\"47.516231\",\n    lng:\"14.550072\",\n    name:\"Austria\"\n  },\n  {\n    id:\"AU\",\n    lat:\"-25.274398\",\n    lng:\"133.775136\",\n    name:\"Australia\"\n  },\n  {\n    id:\"AW\",\n    lat:\"12.52111\",\n    lng:\"-69.968338\",\n    name:\"Aruba\"\n  },\n  {\n    id:\"AZ\",\n    lat:\"40.143105\",\n    lng:\"47.576927\",\n    name:\"Azerbaijan\"\n  },\n  {\n    id:\"BA\",\n    lat:\"43.915886\",\n    lng:\"17.679076\",\n    name:\"\\\"Bosnia and Herzegovina\\\"\"\n  },\n  {\n    id:\"BB\",\n    lat:\"13.193887\",\n    lng:\"-59.543198\",\n    name:\"Barbados\"\n  },\n  {\n    id:\"BD\",\n    lat:\"23.684994\",\n    lng:\"90.356331\",\n    name:\"Bangladesh\"\n  },\n  {\n    id:\"BE\",\n    lat:\"50.503887\",\n    lng:\"4.469936\",\n    name:\"Belgium\"\n  },\n  {\n    id:\"BF\",\n    lat:\"12.238333\",\n    lng:\"-1.561593\",\n    name:\"\\\"Burkina Faso\\\"\"\n  },\n  {\n    id:\"BG\",\n    lat:\"42.733883\",\n    lng:\"25.48583\",\n    name:\"Bulgaria\"\n  },\n  {\n    id:\"BH\",\n    lat:\"25.930414\",\n    lng:\"50.637772\",\n    name:\"Bahrain\"\n  },\n  {\n    id:\"BI\",\n    lat:\"-3.373056\",\n    lng:\"29.918886\",\n    name:\"Burundi\"\n  },\n  {\n    id:\"BJ\",\n    lat:\"9.30769\",\n    lng:\"2.315834\",\n    name:\"Benin\"\n  },\n  {\n    id:\"BM\",\n    lat:\"32.321384\",\n    lng:\"-64.75737\",\n    name:\"Bermuda\"\n  },\n  {\n    id:\"BN\",\n    lat:\"4.535277\",\n    lng:\"114.727669\",\n    name:\"Brunei\"\n  },\n  {\n    id:\"BO\",\n    lat:\"-16.290154\",\n    lng:\"-63.588653\",\n    name:\"Bolivia\"\n  },\n  {\n    id:\"BR\",\n    lat:\"-14.235004\",\n    lng:\"-51.92528\",\n    name:\"Brazil\"\n  },\n  {\n    id:\"BS\",\n    lat:\"25.03428\",\n    lng:\"-77.39628\",\n    name:\"Bahamas\"\n  },\n  {\n    id:\"BT\",\n    lat:\"27.514162\",\n    lng:\"90.433601\",\n    name:\"Bhutan\"\n  },\n  {\n    id:\"BV\",\n    lat:\"-54.423199\",\n    lng:\"3.413194\",\n    name:\"\\\"Bouvet Island\\\"\"\n  },\n  {\n    id:\"BW\",\n    lat:\"-22.328474\",\n    lng:\"24.684866\",\n    name:\"Botswana\"\n  },\n  {\n    id:\"BY\",\n    lat:\"53.709807\",\n    lng:\"27.953389\",\n    name:\"Belarus\"\n  },\n  {\n    id:\"BZ\",\n    lat:\"17.189877\",\n    lng:\"-88.49765\",\n    name:\"Belize\"\n  },\n  {\n    id:\"CA\",\n    lat:\"56.130366\",\n    lng:\"-106.346771\",\n    name:\"Canada\"\n  },\n  {\n    id:\"CC\",\n    lat:\"-12.164165\",\n    lng:\"96.870956\",\n    name:\"\\\"Cocos [Keeling] Islands\\\"\"\n  },\n  {\n    id:\"CD\",\n    lat:\"-4.038333\",\n    lng:\"21.758664\",\n    name:\"\\\"Congo [DRC]\\\"\"\n  },\n  {\n    id:\"CF\",\n    lat:\"6.611111\",\n    lng:\"20.939444\",\n    name:\"\\\"Central African Republic\\\"\"\n  },\n  {\n    id:\"CG\",\n    lat:\"-0.228021\",\n    lng:\"15.827659\",\n    name:\"\\\"Congo [Republic]\\\"\"\n  },\n  {\n    id:\"CH\",\n    lat:\"46.818188\",\n    lng:\"8.227512\",\n    name:\"Switzerland\"\n  },\n  {\n    id:\"CI\",\n    lat:\"7.539989\",\n    lng:\"-5.54708\",\n    name:\"\\\"Côte d'Ivoire\\\"\"\n  },\n  {\n    id:\"CK\",\n    lat:\"-21.236736\",\n    lng:\"-159.777671\",\n    name:\"\\\"Cook Islands\\\"\"\n  },\n  {\n    id:\"CL\",\n    lat:\"-35.675147\",\n    lng:\"-71.542969\",\n    name:\"Chile\"\n  },\n  {\n    id:\"CM\",\n    lat:\"7.369722\",\n    lng:\"12.354722\",\n    name:\"Cameroon\"\n  },\n  {\n    id:\"CN\",\n    lat:\"35.86166\",\n    lng:\"104.195397\",\n    name:\"China\"\n  },\n  {\n    id:\"CO\",\n    lat:\"4.570868\",\n    lng:\"-74.297333\",\n    name:\"Colombia\"\n  },\n  {\n    id:\"CR\",\n    lat:\"9.748917\",\n    lng:\"-83.753428\",\n    name:\"\\\"Costa Rica\\\"\"\n  },\n  {\n    id:\"CU\",\n    lat:\"21.521757\",\n    lng:\"-77.781167\",\n    name:\"Cuba\"\n  },\n  {\n    id:\"CV\",\n    lat:\"16.002082\",\n    lng:\"-24.013197\",\n    name:\"\\\"Cape Verde\\\"\"\n  },\n  {\n    id:\"CX\",\n    lat:\"-10.447525\",\n    lng:\"105.690449\",\n    name:\"\\\"Christmas Island\\\"\"\n  },\n  {\n    id:\"CY\",\n    lat:\"35.126413\",\n    lng:\"33.429859\",\n    name:\"Cyprus\"\n  },\n  {\n    id:\"CZ\",\n    lat:\"49.817492\",\n    lng:\"15.472962\",\n    name:\"\\\"Czech Republic\\\"\"\n  },\n  {\n    id:\"DE\",\n    lat:\"51.165691\",\n    lng:\"10.451526\",\n    name:\"Germany\"\n  },\n  {\n    id:\"DJ\",\n    lat:\"11.825138\",\n    lng:\"42.590275\",\n    name:\"Djibouti\"\n  },\n  {\n    id:\"DK\",\n    lat:\"56.26392\",\n    lng:\"9.501785\",\n    name:\"Denmark\"\n  },\n  {\n    id:\"DM\",\n    lat:\"15.414999\",\n    lng:\"-61.370976\",\n    name:\"Dominica\"\n  },\n  {\n    id:\"DO\",\n    lat:\"18.735693\",\n    lng:\"-70.162651\",\n    name:\"\\\"Dominican Republic\\\"\"\n  },\n  {\n    id:\"DZ\",\n    lat:\"28.033886\",\n    lng:\"1.659626\",\n    name:\"Algeria\"\n  },\n  {\n    id:\"EC\",\n    lat:\"-1.831239\",\n    lng:\"-78.183406\",\n    name:\"Ecuador\"\n  },\n  {\n    id:\"EE\",\n    lat:\"58.595272\",\n    lng:\"25.013607\",\n    name:\"Estonia\"\n  },\n  {\n    id:\"EG\",\n    lat:\"26.820553\",\n    lng:\"30.802498\",\n    name:\"Egypt\"\n  },\n  {\n    id:\"EH\",\n    lat:\"24.215527\",\n    lng:\"-12.885834\",\n    name:\"\\\"Western Sahara\\\"\"\n  },\n  {\n    id:\"ER\",\n    lat:\"15.179384\",\n    lng:\"39.782334\",\n    name:\"Eritrea\"\n  },\n  {\n    id:\"ES\",\n    lat:\"40.463667\",\n    lng:\"-3.74922\",\n    name:\"Spain\"\n  },\n  {\n    id:\"ET\",\n    lat:\"9.145\",\n    lng:\"40.489673\",\n    name:\"Ethiopia\"\n  },\n  {\n    id:\"FI\",\n    lat:\"61.92411\",\n    lng:\"25.748151\",\n    name:\"Finland\"\n  },\n  {\n    id:\"FJ\",\n    lat:\"-16.578193\",\n    lng:\"179.414413\",\n    name:\"Fiji\"\n  },\n  {\n    id:\"FK\",\n    lat:\"-51.796253\",\n    lng:\"-59.523613\",\n    name:\"\\\"Falkland Islands [Islas Malvinas]\\\"\"\n  },\n  {\n    id:\"FM\",\n    lat:\"7.425554\",\n    lng:\"150.550812\",\n    name:\"Micronesia\"\n  },\n  {\n    id:\"FO\",\n    lat:\"61.892635\",\n    lng:\"-6.911806\",\n    name:\"\\\"Faroe Islands\\\"\"\n  },\n  {\n    id:\"FR\",\n    lat:\"46.227638\",\n    lng:\"2.213749\",\n    name:\"France\"\n  },\n  {\n    id:\"GA\",\n    lat:\"-0.803689\",\n    lng:\"11.609444\",\n    name:\"Gabon\"\n  },\n  {\n    id:\"GB\",\n    lat:\"55.378051\",\n    lng:\"-3.435973\",\n    name:\"\\\"United Kingdom\\\"\"\n  },\n  {\n    id:\"GD\",\n    lat:\"12.262776\",\n    lng:\"-61.604171\",\n    name:\"Grenada\"\n  },\n  {\n    id:\"GE\",\n    lat:\"42.315407\",\n    lng:\"43.356892\",\n    name:\"Georgia\"\n  },\n  {\n    id:\"GF\",\n    lat:\"3.933889\",\n    lng:\"-53.125782\",\n    name:\"\\\"French Guiana\\\"\"\n  },\n  {\n    id:\"GG\",\n    lat:\"49.465691\",\n    lng:\"-2.585278\",\n    name:\"Guernsey\"\n  },\n  {\n    id:\"GH\",\n    lat:\"7.946527\",\n    lng:\"-1.023194\",\n    name:\"Ghana\"\n  },\n  {\n    id:\"GI\",\n    lat:\"36.137741\",\n    lng:\"-5.345374\",\n    name:\"Gibraltar\"\n  },\n  {\n    id:\"GL\",\n    lat:\"71.706936\",\n    lng:\"-42.604303\",\n    name:\"Greenland\"\n  },\n  {\n    id:\"GM\",\n    lat:\"13.443182\",\n    lng:\"-15.310139\",\n    name:\"Gambia\"\n  },\n  {\n    id:\"GN\",\n    lat:\"9.945587\",\n    lng:\"-9.696645\",\n    name:\"Guinea\"\n  },\n  {\n    id:\"GP\",\n    lat:\"16.995971\",\n    lng:\"-62.067641\",\n    name:\"Guadeloupe\"\n  },\n  {\n    id:\"GQ\",\n    lat:\"1.650801\",\n    lng:\"10.267895\",\n    name:\"\\\"Equatorial Guinea\\\"\"\n  },\n  {\n    id:\"GR\",\n    lat:\"39.074208\",\n    lng:\"21.824312\",\n    name:\"Greece\"\n  },\n  {\n    id:\"GS\",\n    lat:\"-54.429579\",\n    lng:\"-36.587909\",\n    name:\"\\\"South Georgia and the South Sandwich Islands\\\"\"\n  },\n  {\n    id:\"GT\",\n    lat:\"15.783471\",\n    lng:\"-90.230759\",\n    name:\"Guatemala\"\n  },\n  {\n    id:\"GU\",\n    lat:\"13.444304\",\n    lng:\"144.793731\",\n    name:\"Guam\"\n  },\n  {\n    id:\"GW\",\n    lat:\"11.803749\",\n    lng:\"-15.180413\",\n    name:\"Guinea-Bissau\"\n  },\n  {\n    id:\"GY\",\n    lat:\"4.860416\",\n    lng:\"-58.93018\",\n    name:\"Guyana\"\n  },\n  {\n    id:\"GZ\",\n    lat:\"31.354676\",\n    lng:\"34.308825\",\n    name:\"\\\"Gaza Strip\\\"\"\n  },\n  {\n    id:\"HK\",\n    lat:\"22.396428\",\n    lng:\"114.109497\",\n    name:\"\\\"Hong Kong\\\"\"\n  },\n  {\n    id:\"HM\",\n    lat:\"-53.08181\",\n    lng:\"73.504158\",\n    name:\"\\\"Heard Island and McDonald Islands\\\"\"\n  },\n  {\n    id:\"HN\",\n    lat:\"15.199999\",\n    lng:\"-86.241905\",\n    name:\"Honduras\"\n  },\n  {\n    id:\"HR\",\n    lat:\"45.1\",\n    lng:\"15.2\",\n    name:\"Croatia\"\n  },\n  {\n    id:\"HT\",\n    lat:\"18.971187\",\n    lng:\"-72.285215\",\n    name:\"Haiti\"\n  },\n  {\n    id:\"HU\",\n    lat:\"47.162494\",\n    lng:\"19.503304\",\n    name:\"Hungary\"\n  },\n  {\n    id: \"ID\",\n    lat:\"-0.789275\",\n    lng:\"113.921327\",\n    name:\"Indonesia\"\n  },\n  {\n    id:\"IE\",\n    lat:\"53.41291\",\n    lng:\"-8.24389\",\n    name:\"Ireland\"\n  },\n  {\n    id:\"IL\",\n    lat:\"31.046051\",\n    lng:\"34.851612\",\n    name:\"Israel\"\n  },\n  {\n    id:\"IM\",\n    lat:\"54.236107\",\n    lng:\"-4.548056\",\n    name:\"\\\"Isle of Man\\\"\"\n  },\n  {\n    id:\"IN\",\n    lat:\"20.593684\",\n    lng:\"78.96288\",\n    name:\"India\"\n  },\n  {\n    id:\"IO\",\n    lat:\"-6.343194\",\n    lng:\"71.876519\",\n    name:\"\\\"British Indian Ocean Territory\\\"\"\n  },\n  {\n    id:\"IQ\",\n    lat:\"33.223191\",\n    lng:\"43.679291\",\n    name:\"Iraq\"\n  },\n  {\n    id:\"IR\",\n    lat:\"32.427908\",\n    lng:\"53.688046\",\n    name:\"Iran\"\n  },\n  {\n    id:\"IS\",\n    lat:\"64.963051\",\n    lng:\"-19.020835\",\n    name:\"Iceland\"\n  },\n  {\n    id:\"IT\",\n    lat:\"41.87194\",\n    lng:\"12.56738\",\n    name:\"Italy\"\n  },\n  {\n    id:\"JE\",\n    lat:\"49.214439\",\n    lng:\"-2.13125\",\n    name:\"Jersey\"\n  },\n  {\n    id:\"JM\",\n    lat:\"18.109581\",\n    lng:\"-77.297508\",\n    name:\"Jamaica\"\n  },\n  {\n    id:\"JO\",\n    lat:\"30.585164\",\n    lng:\"36.238414\",\n    name:\"Jordan\"\n  },\n  {\n    id:\"JP\",\n    lat:\"36.204824\",\n    lng:\"138.252924\",\n    name:\"Japan\"\n  },\n  {\n    id:\"KE\",\n    lat:\"-0.023559\",\n    lng:\"37.906193\",\n    name:\"Kenya\"\n  },\n  {\n    id:\"KG\",\n    lat:\"41.20438\",\n    lng:\"74.766098\",\n    name:\"Kyrgyzstan\"\n  },\n  {\n    id:\"KH\",\n    lat:\"12.565679\",\n    lng:\"104.990963\",\n    name:\"Cambodia\"\n  },\n  {\n    id:\"KI\",\n    lat:\"-3.370417\",\n    lng:\"-168.734039\",\n    name:\"Kiribati\"\n  },\n  {\n    id:\"KM\",\n    lat:\"-11.875001\",\n    lng:\"43.872219\",\n    name:\"Comoros\"\n  },\n  {\n    id:\"KN\",\n    lat:\"17.357822\",\n    lng:\"-62.782998\",\n    name:\"\\\"Saint Kitts and Nevis\\\"\"\n  },\n  {\n    id:\"KP\",\n    lat:\"40.339852\",\n    lng:\"127.510093\",\n    name:\"\\\"North Korea\\\"\"\n  },\n  {\n    id:\"KR\",\n    lat:\"35.907757\",\n    lng:\"127.766922\",\n    name:\"\\\"South Korea\\\"\"\n  },\n  {\n    id:\"KW\",\n    lat:\"29.31166\",\n    lng:\"47.481766\",\n    name:\"Kuwait\"\n  },\n  {\n    id:\"KY\",\n    lat:\"19.513469\",\n    lng:\"-80.566956\",\n    name:\"\\\"Cayman Islands\\\"\"\n  },\n  {\n    id:\"KZ\",\n    lat:\"48.019573\",\n    lng:\"66.923684\",\n    name:\"Kazakhstan\"\n  },\n  {\n    id:\"LA\",\n    lat:\"19.85627\",\n    lng:\"102.495496\",\n    name:\"Laos\"\n  },\n  {\n    id:\"LB\",\n    lat:\"33.854721\",\n    lng:\"35.862285\",\n    name:\"Lebanon\"\n  },\n  {\n    id:\"LC\",\n    lat:\"13.909444\",\n    lng:\"-60.978893\",\n    name:\"\\\"Saint Lucia\\\"\"\n  },\n  {\n    id:\"LI\",\n    lat:\"47.166\",\n    lng:\"9.555373\",\n    name:\"Liechtenstein\"\n  },\n  {\n    id:\"LK\",\n    lat:\"7.873054\",\n    lng:\"80.771797\",\n    name:\"\\\"Sri Lanka\\\"\"\n  },\n  {\n    id:\"LR\",\n    lat:\"6.428055\",\n    lng:\"-9.429499\",\n    name:\"Liberia\"\n  },\n  {\n    id:\"LS\",\n    lat:\"-29.609988\",\n    lng:\"28.233608\",\n    name:\"Lesotho\"\n  },\n  {\n    id:\"LT\",\n    lat:\"55.169438\",\n    lng:\"23.881275\",\n    name:\"Lithuania\"\n  },\n  {\n    id:\"LU\",\n    lat:\"49.815273\",\n    lng:\"6.129583\",\n    name:\"Luxembourg\"\n  },\n  {\n    id:\"LV\",\n    lat:\"56.879635\",\n    lng:\"24.603189\",\n    name:\"Latvia\"\n  },\n  {\n    id:\"LY\",\n    lat:\"26.3351\",\n    lng:\"17.228331\",\n    name:\"Libya\"\n  },\n  {\n    id:\"MA\",\n    lat:\"31.791702\",\n    lng:\"-7.09262\",\n    name:\"Morocco\"\n  },\n  {\n    id:\"MC\",\n    lat:\"43.750298\",\n    lng:\"7.412841\",\n    name:\"Monaco\"\n  },\n  {\n    id:\"MD\",\n    lat:\"47.411631\",\n    lng:\"28.369885\",\n    name:\"Moldova\"\n  },\n  {\n    id:\"ME\",\n    lat:\"42.708678\",\n    lng:\"19.37439\",\n    name:\"Montenegro\"\n  },\n  {\n    id:\"MG\",\n    lat:\"-18.766947\",\n    lng:\"46.869107\",\n    name:\"Madagascar\"\n  },\n  {\n    id:\"MH\",\n    lat:\"7.131474\",\n    lng:\"171.184478\",\n    name:\"\\\"Marshall Islands\\\"\"\n  },\n  {\n    id:\"MK\",\n    lat:\"41.608635\",\n    lng:\"21.745275\",\n    name:\"\\\"Macedonia [FYROM]\\\"\"\n  },\n  {\n    id:\"ML\",\n    lat:\"17.570692\",\n    lng:\"-3.996166\",\n    name:\"Mali\"\n  },\n  {\n    id:\"MM\",\n    lat:\"21.913965\",\n    lng:\"95.956223\",\n    name:\"\\\"Myanmar [Burma]\\\"\"\n  },\n  {\n    id:\"MN\",\n    lat:\"46.862496\",\n    lng:\"103.846656\",\n    name:\"Mongolia\"\n  },\n  {\n    id:\"MO\",\n    lat:\"22.198745\",\n    lng:\"113.543873\",\n    name:\"Macau\"\n  },\n  {\n    id:\"MP\",\n    lat:\"17.33083\",\n    lng:\"145.38469\",\n    name:\"\\\"Northern Mariana Islands\\\"\"\n  },\n  {\n    id:\"MQ\",\n    lat:\"14.641528\",\n    lng:\"-61.024174\",\n    name:\"Martinique\"\n  },\n  {\n    id:\"MR\",\n    lat:\"21.00789\",\n    lng:\"-10.940835\",\n    name:\"Mauritania\"\n  },\n  {\n    id:\"MS\",\n    lat:\"16.742498\",\n    lng:\"-62.187366\",\n    name:\"Montserrat\"\n  },\n  {\n    id:\"MT\",\n    lat:\"35.937496\",\n    lng:\"14.375416\",\n    name:\"Malta\"\n  },\n  {\n    id:\"MU\",\n    lat:\"-20.348404\",\n    lng:\"57.552152\",\n    name:\"Mauritius\"\n  },\n  {\n    id:\"MV\",\n    lat:\"3.202778\",\n    lng:\"73.22068\",\n    name:\"Maldives\"\n  },\n  {\n    id:\"MW\",\n    lat:\"-13.254308\",\n    lng:\"34.301525\",\n    name:\"Malawi\"\n  },\n  {\n    id:\"MX\",\n    lat:\"23.634501\",\n    lng:\"-102.552784\",\n    name:\"Mexico\"\n  },\n  {\n    id:\"MY\",\n    lat:\"4.210484\",\n    lng:\"101.975766\",\n    name:\"Malaysia\"\n  },\n  {\n    id:\"MZ\",\n    lat:\"-18.665695\",\n    lng:\"35.529562\",\n    name:\"Mozambique\"\n  },\n  {\n    id:\"NA\",\n    lat:\"-22.95764\",\n    lng:\"18.49041\",\n    name:\"Namibia\"\n  },\n  {\n    id:\"NC\",\n    lat:\"-20.904305\",\n    lng:\"165.618042\",\n    name:\"\\\"New Caledonia\\\"\"\n  },\n  {\n    id:\"NE\",\n    lat:\"17.607789\",\n    lng:\"8.081666\",\n    name:\"Niger\"\n  },\n  {\n    id:\"NF\",\n    lat:\"-29.040835\",\n    lng:\"167.954712\",\n    name:\"\\\"Norfolk Island\\\"\"\n  },\n  {\n    id:\"NG\",\n    lat:\"9.081999\",\n    lng:\"8.675277\",\n    name:\"Nigeria\"\n  },\n  {\n    id:\"NI\",\n    lat:\"12.865416\",\n    lng:\"-85.207229\",\n    name:\"Nicaragua\"\n  },\n  {\n    id:\"NL\",\n    lat:\"52.132633\",\n    lng:\"5.291266\",\n    name:\"Netherlands\"\n  },\n  {\n    id:\"NO\",\n    lat:\"60.472024\",\n    lng:\"8.468946\",\n    name:\"Norway\"\n  },\n  {\n    id:\"NP\",\n    lat:\"28.394857\",\n    lng:\"84.124008\",\n    name:\"Nepal\"\n  },\n  {\n    id:\"NR\",\n    lat:\"-0.522778\",\n    lng:\"166.931503\",\n    name:\"Nauru\"\n  },\n  {\n    id:\"NU\",\n    lat:\"-19.054445\",\n    lng:\"-169.867233\",\n    name:\"Niue\"\n  },\n  {\n    id:\"NZ\",\n    lat:\"-40.900557\",\n    lng:\"174.885971\",\n    name:\"\\\"New Zealand\\\"\"\n  },\n  {\n    id:\"OM\",\n    lat:\"21.512583\",\n    lng:\"55.923255\",\n    name:\"Oman\"\n  },\n  {\n    id:\"PA\",\n    lat:\"8.537981\",\n    lng:\"-80.782127\",\n    name:\"Panama\"\n  },\n  {\n    id:\"PE\",\n    lat:\"-9.189967\",\n    lng:\"-75.015152\",\n    name:\"Peru\"\n  },\n  {\n    id:\"PF\",\n    lat:\"-17.679742\",\n    lng:\"-149.406843\",\n    name:\"\\\"French Polynesia\\\"\"\n  },\n  {\n    id:\"PG\",\n    lat:\"-6.314993\",\n    lng:\"143.95555\",\n    name:\"\\\"Papua New Guinea\\\"\"\n  },\n  {\n    id:\"PH\",\n    lat:\"12.879721\",\n    lng:\"121.774017\",\n    name:\"Philippines\"\n  },\n  {\n    id:\"PK\",\n    lat:\"30.375321\",\n    lng:\"69.345116\",\n    name:\"Pakistan\"\n  },\n  {\n    id:\"PL\",\n    lat:\"51.919438\",\n    lng:\"19.145136\",\n    name:\"Poland\"\n  },\n  {\n    id:\"PM\",\n    lat:\"46.941936\",\n    lng:\"-56.27111\",\n    name:\"\\\"Saint Pierre and Miquelon\\\"\"\n  },\n  {\n    id:\"PN\",\n    lat:\"-24.703615\",\n    lng:\"-127.439308\",\n    name:\"\\\"Pitcairn Islands\\\"\"\n  },\n  {\n    id:\"PR\",\n    lat:\"18.220833\",\n    lng:\"-66.590149\",\n    name:\"\\\"Puerto Rico\\\"\"\n  },\n  {\n    id:\"PS\",\n    lat:\"31.952162\",\n    lng:\"35.233154\",\n    name:\"\\\"Palestinian Territories\\\"\"\n  },\n  {\n    id:\"PT\",\n    lat:\"39.399872\",\n    lng:\"-8.224454\",\n    name:\"Portugal\"\n  },\n  {\n    id:\"PW\",\n    lat:\"7.51498\",\n    lng:\"134.58252\",\n    name:\"Palau\"\n  },\n  {\n    id:\"PY\",\n    lat:\"-23.442503\",\n    lng:\"-58.443832\",\n    name:\"Paraguay\"\n  },\n  {\n    id:\"QA\",\n    lat:\"25.354826\",\n    lng:\"51.183884\",\n    name:\"Qatar\"\n  },\n  {\n    id:\"RE\",\n    lat:\"-21.115141\",\n    lng:\"55.536384\",\n    name:\"Réunion\"\n  },\n  {\n    id:\"RO\",\n    lat:\"45.943161\",\n    lng:\"24.96676\",\n    name:\"Romania\"\n  },\n  {\n    id:\"RS\",\n    lat:\"44.016521\",\n    lng:\"21.005859\",\n    name:\"Serbia\"\n  },\n  {\n    id:\"RU\",\n    lat:\"61.52401\",\n    lng:\"105.318756\",\n    name:\"Russia\"\n  },\n  {\n    id:\"RW\",\n    lat:\"-1.940278\",\n    lng:\"29.873888\",\n    name:\"Rwanda\"\n  },\n  {\n    id:\"SA\",\n    lat:\"23.885942\",\n    lng:\"45.079162\",\n    name:\"\\\"Saudi Arabia\\\"\"\n  },\n  {\n    id:\"SB\",\n    lat:\"-9.64571\",\n    lng:\"160.156194\",\n    name:\"\\\"Solomon Islands\\\"\"\n  },\n  {\n    id:\"SC\",\n    lat:\"-4.679574\",\n    lng:\"55.491977\",\n    name:\"Seychelles\"\n  },\n  {\n    id:\"SD\",\n    lat:\"12.862807\",\n    lng:\"30.217636\",\n    name:\"Sudan\"\n  },\n  {\n    id:\"SE\",\n    lat:\"60.128161\",\n    lng:\"18.643501\",\n    name:\"Sweden\"\n  },\n  {\n    id:\"SG\",\n    lat:\"1.352083\",\n    lng:\"103.819836\",\n    name:\"Singapore\"\n  },\n  {\n    id:\"SH\",\n    lat:\"-24.143474\",\n    lng:\"-10.030696\",\n    name:\"\\\"Saint Helena\\\"\"\n  },\n  {\n    id:\"SI\",\n    lat:\"46.151241\",\n    lng:\"14.995463\",\n    name:\"Slovenia\"\n  },\n  {\n    id:\"SJ\",\n    lat:\"77.553604\",\n    lng:\"23.670272\",\n    name:\"\\\"Svalbard and Jan Mayen\\\"\"\n  },\n  {\n    id:\"SK\",\n    lat:\"48.669026\",\n    lng:\"19.699024\",\n    name:\"Slovakia\"\n  },\n  {\n    id:\"SL\",\n    lat:\"8.460555\",\n    lng:\"-11.779889\",\n    name:\"\\\"Sierra Leone\\\"\"\n  },\n  {\n    id:\"SM\",\n    lat:\"43.94236\",\n    lng:\"12.457777\",\n    name:\"\\\"San Marino\\\"\"\n  },\n  {\n    id:\"SN\",\n    lat:\"14.497401\",\n    lng:\"-14.452362\",\n    name:\"Senegal\"\n  },\n  {\n    id:\"SO\",\n    lat:\"5.152149\",\n    lng:\"46.199616\",\n    name:\"Somalia\"\n  },\n  {\n    id:\"SR\",\n    lat:\"3.919305\",\n    lng:\"-56.027783\",\n    name:\"Suriname\"\n  },\n  {\n    id:\"ST\",\n    lat:\"0.18636\",\n    lng:\"6.613081\",\n    name:\"\\\"São Tomé and Príncipe\\\"\"\n  },\n  {\n    id:\"SV\",\n    lat:\"13.794185\",\n    lng:\"-88.89653\",\n    name:\"\\\"El Salvador\\\"\"\n  },\n  {\n    id:\"SY\",\n    lat:\"34.802075\",\n    lng:\"38.996815\",\n    name:\"Syria\"\n  },\n  {\n    id:\"SZ\",\n    lat:\"-26.522503\",\n    lng:\"31.465866\",\n    name:\"Swaziland\"\n  },\n  {\n    id:\"TC\",\n    lat:\"21.694025\",\n    lng:\"-71.797928\",\n    name:\"\\\"Turks and Caicos Islands\\\"\"\n  },\n  {\n    id:\"TD\",\n    lat:\"15.454166\",\n    lng:\"18.732207\",\n    name:\"Chad\"\n  },\n  {\n    id:\"TF\",\n    lat:\"-49.280366\",\n    lng:\"69.348557\",\n    name:\"\\\"French Southern Territories\\\"\"\n  },\n  {\n    id:\"TG\",\n    lat:\"8.619543\",\n    lng:\"0.824782\",\n    name:\"Togo\"\n  },\n  {\n    id:\"TH\",\n    lat:\"15.870032\",\n    lng:\"100.992541\",\n    name:\"Thailand\"\n  },\n  {\n    id:\"TJ\",\n    lat:\"38.861034\",\n    lng:\"71.276093\",\n    name:\"Tajikistan\"\n  },\n  {\n    id:\"TK\",\n    lat:\"-8.967363\",\n    lng:\"-171.855881\",\n    name:\"Tokelau\"\n  },\n  {\n    id:\"TL\",\n    lat:\"-8.874217\",\n    lng:\"125.727539\",\n    name:\"Timor-Leste\"\n  },\n  {\n    id:\"TM\",\n    lat:\"38.969719\",\n    lng:\"59.556278\",\n    name:\"Turkmenistan\"\n  },\n  {\n    id:\"TN\",\n    lat:\"33.886917\",\n    lng:\"9.537499\",\n    name:\"Tunisia\"\n  },\n  {\n    id:\"TO\",\n    lat:\"-21.178986\",\n    lng:\"-175.198242\",\n    name:\"Tonga\"\n  },\n  {\n    id:\"TR\",\n    lat:\"38.963745\",\n    lng:\"35.243322\",\n    name:\"Turkey\"\n  },\n  {\n    id:\"TT\",\n    lat:\"10.691803\",\n    lng:\"-61.222503\",\n    name:\"\\\"Trinidad and Tobago\\\"\"\n  },\n  {\n    id:\"TV\",\n    lat:\"-7.109535\",\n    lng:\"177.64933\",\n    name:\"Tuvalu\"\n  },\n  {\n    id:\"TW\",\n    lat:\"23.69781\",\n    lng:\"120.960515\",\n    name:\"Taiwan\"\n  },\n  {\n    id:\"TZ\",\n    lat:\"-6.369028\",\n    lng:\"34.888822\",\n    name:\"Tanzania\"\n  },\n  {\n    id:\"UA\",\n    lat:\"48.379433\",\n    lng:\"31.16558\",\n    name:\"Ukraine\"\n  },\n  {\n    id:\"UG\",\n    lat:\"1.373333\",\n    lng:\"32.290275\",\n    name:\"Uganda\"\n  },\n  {\n    id:\"UM\",\n    lat:\"\",\n    lng:\"\",\n    name:\"\\\"U.S. Minor Outlying Islands\\\"\"\n  },\n  {\n    id:\"US\",\n    lat:\"37.09024\",\n    lng:\"-95.712891\",\n    name:\"\\\"United States\\\"\"\n  },\n  {\n    id:\"UY\",\n    lat:\"-32.522779\",\n    lng:\"-55.765835\",\n    name:\"Uruguay\"\n  },\n  {\n    id:\"UZ\",\n    lat:\"41.377491\",\n    lng:\"64.585262\",\n    name:\"Uzbekistan\"\n  },\n  {\n    id:\"VA\",\n    lat:\"41.902916\",\n    lng:\"12.453389\",\n    name:\"\\\"Vatican City\\\"\"\n  },\n  {\n    id:\"VC\",\n    lat:\"12.984305\",\n    lng:\"-61.287228\",\n    name:\"\\\"Saint Vincent and the Grenadines\\\"\"\n  },\n  {\n    id:\"VE\",\n    lat:\"6.42375\",\n    lng:\"-66.58973\",\n    name:\"Venezuela\"\n  },\n  {\n    id:\"VG\",\n    lat:\"18.420695\",\n    lng:\"-64.639968\",\n    name:\"\\\"British Virgin Islands\\\"\"\n  },\n  {\n    id:\"VI\",\n    lat:\"18.335765\",\n    lng:\"-64.896335\",\n    name:\"\\\"U.S. Virgin Islands\\\"\"\n  },\n  {\n    id:\"VN\",\n    lat:\"14.058324\",\n    lng:\"108.277199\",\n    name:\"Vietnam\"\n  },\n  {\n    id:\"VU\",\n    lat:\"-15.376706\",\n    lng:\"166.959158\",\n    name:\"Vanuatu\"\n  },\n  {\n    id:\"WF\",\n    lat:\"-13.768752\",\n    lng:\"-177.156097\",\n    name:\"\\\"Wallis and Futuna\\\"\"\n  },\n  {\n    id:\"WS\",\n    lat:\"-13.759029\",\n    lng:\"-172.104629\",\n    name:\"Samoa\"\n  },\n  {\n    id:\"XK\",\n    lat:\"42.602636\",\n    lng:\"20.902977\",\n    name:\"Kosovo\"\n  },\n  {\n    id:\"YE\",\n    lat:\"15.552727\",\n    lng:\"48.516388\",\n    name:\"Yemen\"\n  },\n  {\n    id:\"YT\",\n    lat:\"-12.8275\",\n    lng:\"45.166244\",\n    name:\"Mayotte\"\n  },\n  {\n    id:\"ZA\",\n    lat:\"-30.559482\",\n    lng:\"22.937506\",\n    name:\"\\\"South Africa\\\"\"\n  },\n  {\n    id:\"ZM\",\n    lat:\"-13.133897\",\n    lng:\"27.849332\",\n    name:\"Zambia\"\n  },\n  {\n    id:\"ZW\",\n    lat:\"-19.015438\",\n    lng:\"29.154857\",\n    name:\"Zimbabwe\"\n  },\n]\n\nexport default countries;","import React, { useState, useRef } from 'react';\nimport { Row, Col, Button, Form } from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport geoData from '../assets/countries';\n\nconst Search = ({ onSearch }) => {\n  const [selectedCountries, setSelectedCountries] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const submitted = useRef(false);\n\n  const searchHandler = (e) => {\n    e.preventDefault();\n    submitted.current = true;\n    const isSelectedValidDate = Date.parse(selectedDate);\n    const isSelectedValidCountry = selectedCountries.length === 1;\n    if (!isSelectedValidDate || !isSelectedValidCountry) {\n      onSearch(false);\n      return;\n    }\n\n    const country = selectedCountries[0];\n    const date = new Date(selectedDate);\n    onSearch(true, country.lat, country.lng, date);\n  }\n\n  const changeDateHandler = ({ target }) => {\n    submitted.current = false;\n    setSelectedDate(target.value);\n  }\n\n  const setSelectedCountryHandler = (data) => {\n    submitted.current = false;\n    setSelectedCountries(data);\n  }\n\n  return (\n    <Form noValidate onSubmit={searchHandler}>\n      <Form.Row className=\"justify-content-between\">\n        <Form.Group as={Col} sm={5} xs={12}>\n          <Form.Label>\n            Date:\n          </Form.Label>\n          <Form.Control\n            className=\"w-100\"\n            type=\"date\"\n            value={selectedDate}\n            onChange={changeDateHandler}\n            isInvalid={submitted.current && !Date.parse(selectedDate)}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid date\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} sm={5}>\n          <Form.Label>Country:</Form.Label>\n          <Typeahead\n            id=\"country-typeahead\"\n            onChange={setSelectedCountryHandler}\n            selected={selectedCountries}\n            labelKey={option => `${option.name}`}\n            options={geoData}\n            isInvalid={submitted.current && selectedCountries.length !== 1}\n          />\n        </Form.Group>\n      </Form.Row>\n      <Row>\n        <Col sm=\"auto\" xs={12}>\n          <Button\n            className=\"search-button\"\n            type=\"submit\"\n          >\n\n            Show\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default Search;","import React from 'react';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport sunrise from '../assets/icons/sunrise.svg';\nimport sunset from '../assets/icons/sunset.svg';\n\nconst AstronomicalInfo = ({ isLoading, sunsetTime, sunriseTime }) => {\n\n  if (isLoading) {\n    return (\n      <Row>\n        <Col xs=\"auto\"><Spinner animation=\"border\" /></Col>\n      </Row>\n    );\n  };\n\n  return (\n    <Container className=\"info-container\">\n      <Row>\n        <Col xs={4} md={3} lg={2}>\n          <img src={sunrise} alt=\"sunrise\" />\n        </Col>\n        <Col>\n          <span className=\"info\">Sunrise is at {sunriseTime}</span>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={4} md={3} lg={2}>\n          <img src={sunset} alt=\"sunset\" />\n        </Col>\n        <Col>\n          <span className=\"info\">Sunset is at {sunsetTime}</span>\n        </Col>\n\n      </Row>\n    </Container>\n  );\n};\n\nexport default AstronomicalInfo;","const ASTRONOMICAL_SERVICE = 'https://api.sunrise-sunset.org';\n\nconst getAstronomicalInfoUrl = (lat, lng, date = 'today') => (\n  `${ASTRONOMICAL_SERVICE}/json?lat=${lat}&lng=${lng}&date=${date}`\n);\n\nexport default async (lat, lng, date) => {\n  const formattedDate = getFormattedDateString(date);\n  try {\n    const response = await fetch(getAstronomicalInfoUrl(lat, lng, formattedDate));\n    const json = await response.json();\n    const { results, status } = json;\n\n    if (response.ok) {\n      return {\n        sunset: results.sunset,\n        sunrise: results.sunrise,\n      };\n    } else {\n      throw new Error(`Failed to get astronomical data. ${status}`);\n    }\n  } catch (error) {\n    throw new Error(`Server problems. ${error.message}`);\n  }\n};\n\nconst getFormattedDateString = (date) => {\n  const month = `${date.getMonth() + 1}`.padStart(2,0);\n  const day = `${date.getDate()}`.padStart(2,0);\n\n  return `${date.getFullYear()}-${month}-${day}`;\n};","import React, { useState } from 'react';\nimport { Alert, Row, Col } from 'react-bootstrap';\nimport Search from './Search';\nimport AstronomicalInfo from './AstronomicalInfo';\nimport getAstromicalInfo from '../engine/astronomicalInfoPicker';\n\nconst Main = () => {\n  const [astronomicalInfo, setAstronomicalInfo] = useState();\n  const [error, setError] = useState();\n  const [isLoading, setLoading] = useState(false);\n\n  const searchHandler = async (isValid, lat, lng, date) => {\n    if (!isValid) {\n      setError('Incorrect input data');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const result = await getAstromicalInfo(lat, lng, date);\n      setAstronomicalInfo(result);\n      setError(null);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Row>\n      <Col xs={11} lg={8}>\n        <Search onSearch={searchHandler} />\n        {error && (\n          <Alert variant=\"danger\">\n            <Alert.Heading>Something went wrong</Alert.Heading>\n            <p>{error}</p>\n          </Alert>)}\n        {astronomicalInfo && !error &&\n          <AstronomicalInfo\n            isLoading={isLoading}\n            sunriseTime={astronomicalInfo.sunrise}\n            sunsetTime={astronomicalInfo.sunset}\n          />}\n      </Col>\n    </Row>\n  );\n};\n\nexport default Main;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <>\n      <header>\n        <h2>Sunrise and sunset information</h2>\n      </header>\n      <main role=\"main\" className=\"main-content\">\n        <Main/>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}